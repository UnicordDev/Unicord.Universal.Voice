// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190620.2

#pragma once
#include "winrt/Unicord.Universal.Voice.h"
#include "winrt/Windows.Foundation.h"
namespace winrt::Unicord::Universal::Voice::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) VoiceClient_base : implements<D, Unicord::Universal::Voice::VoiceClient, Windows::Foundation::IClosable, I...>
    {
        using base_type = VoiceClient_base;
        using class_type = Unicord::Universal::Voice::VoiceClient;
        using implements_type = typename VoiceClient_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"Unicord.Universal.Voice.VoiceClient";
        }
    };
}
namespace winrt::Unicord::Universal::Voice::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) VoiceClientT : implements<D, Windows::Foundation::IActivationFactory, Unicord::Universal::Voice::IVoiceClientFactory, Unicord::Universal::Voice::IVoiceClientStatics, I...>
    {
        using instance_type = Unicord::Universal::Voice::VoiceClient;

        hstring GetRuntimeClassName() const
        {
            return L"Unicord.Universal.Voice.VoiceClient";
        }
        auto CreateInstance(Unicord::Universal::Voice::VoiceClientOptions const& options)
        {
            return make<T>(options);
        }
        auto OpusVersion()
        {
            return T::OpusVersion();
        }
        auto SodiumVersion()
        {
            return T::SodiumVersion();
        }
        [[noreturn]] Windows::Foundation::IInspectable ActivateInstance() const
        {
            throw hresult_not_implemented();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_VOICECLIENT_XAML_G_H) || __has_include("VoiceClient.xaml.g.h")
#include "VoiceClient.xaml.g.h"
#else

namespace winrt::Unicord::Universal::Voice::implementation
{
    template <typename D, typename... I>
    using VoiceClientT = VoiceClient_base<D, I...>;
}

#endif
