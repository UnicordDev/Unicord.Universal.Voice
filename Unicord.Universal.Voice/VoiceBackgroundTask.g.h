// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190620.2

#pragma once
#include "winrt/Unicord.Universal.Voice.Background.h"
#include "winrt/Windows.ApplicationModel.Background.h"
namespace winrt::Unicord::Universal::Voice::Background::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) VoiceBackgroundTask_base : implements<D, Unicord::Universal::Voice::Background::VoiceBackgroundTask, Windows::ApplicationModel::Background::IBackgroundTask, I...>
    {
        using base_type = VoiceBackgroundTask_base;
        using class_type = Unicord::Universal::Voice::Background::VoiceBackgroundTask;
        using implements_type = typename VoiceBackgroundTask_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"Unicord.Universal.Voice.Background.VoiceBackgroundTask";
        }
    };
}
namespace winrt::Unicord::Universal::Voice::Background::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) VoiceBackgroundTaskT : implements<D, Windows::Foundation::IActivationFactory, I...>
    {
        using instance_type = Unicord::Universal::Voice::Background::VoiceBackgroundTask;

        hstring GetRuntimeClassName() const
        {
            return L"Unicord.Universal.Voice.Background.VoiceBackgroundTask";
        }
        auto ActivateInstance() const
        {
            return make<T>();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_VOICEBACKGROUNDTASK_XAML_G_H) || __has_include("Background.VoiceBackgroundTask.xaml.g.h")
#include "Background.VoiceBackgroundTask.xaml.g.h"
#else

namespace winrt::Unicord::Universal::Voice::Background::implementation
{
    template <typename D, typename... I>
    using VoiceBackgroundTaskT = VoiceBackgroundTask_base<D, I...>;
}

#endif
